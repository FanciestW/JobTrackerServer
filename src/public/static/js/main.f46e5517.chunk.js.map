{"version":3,"sources":["Components/SignInUp/EmailTextField/EmailTextField.js","Components/SignInUp/PasswordTextField/PasswordTextField.js","Components/SignInUp/Login/Login.js","Components/SignInUp/SignUp/SignUp.js","Components/Navbar/Navbar.js","Components/JobApplicationListItem/JobApplicationListItem.js","Components/JobApplicationList/JobApplicationList.js","Components/InterviewListItem/InterviewListItem.js","Components/InterviewList/InterviewList.js","Components/Dashboard/Dashboard.js","Components/CustomSnackbar/CustomSnackbar.js","Components/NewApplicationDialog/NewApplicationDialog.js","Components/JobApplicationsView/JobApplicationsView.js","Components/NewInterviewDialog/NewInterviewDialog.js","Components/JobInterviewsView/JobInterviewsView.js","Components/ErrorPage/ErrorPage.js","Components/AuthedApp/AuthedApp.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["EmailTextField","props","state","isValid","value","handleOnChange","bind","event","email","target","regex","RegExp","this","match","onChange","setState","TextField","required","error","showError","label","placeholder","margin","variant","fullWidth","Component","defaultProps","undefined","PasswordTextField","password","type","Login","emailValue","emailValid","passwordValue","checkedRememberMe","handleEmailField","handlePasswordField","handleLogin","reqBody","Axios","post","response","console","log","status","localStorage","setItem","onAuthChange","name","className","Paper","Typography","Box","textAlign","style","FormControlLabel","control","Checkbox","checked","color","Button","onClick","to","SignUp","firstNameValue","firstNameValid","lastNameValue","lastNameValid","passwordValid","passwordConfirmValue","passwordConfirmValid","handleFirstNameField","handleLastNameField","handlePasswordConfirmField","handleSignUp","length","firstName","lastName","autoFocus","component","Navbar","open","handleToggleDrawer","sideNav","role","onKeyDown","List","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","title","location","pathname","AppBar","position","Toolbar","IconButton","edge","aria-label","SwipeableDrawer","onOpen","onClose","withRouter","JobApplicationListItem","Grid","container","direction","alignItems","spacing","item","xs","padding","inputProps","noWrap","company","JobApplicationList","jobListItems","jobs","map","job","index","key","divided","Divider","height","widget","InterviewListItem","options","year","month","day","date","Date","toLocaleDateString","InterviewList","interviewListItems","interviews","interview","Dashboard","applications","reloadDashboardData","get","applicationRes","interviewRes","data","jobApplications","jobInterviews","width","overflow","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","main","amber","icon","fontSize","iconVariant","opacity","marginRight","message","display","CustomSnackbar","classes","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","NewApplicationDialog","successSnackbarOpen","failSnackbarOpen","priority","appliedDate","handleOpen","handleClose","handleClearFields","handleOnAdd","onAdd","Dialog","aria-labelledby","DialogTitle","DialogContent","FormControl","InputLabel","Select","MenuItem","utils","DateFnsUtils","format","KeyboardButtonProps","DialogActions","Fab","top","right","bottom","left","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","JobApplicationsView","dialogOpen","loadJobApplications","res","NewInterviewDialog","interviewDate","JobInterviewsView","loadInterviews","ErrorPage","statusCode","AuthedApp","exact","path","createMuiTheme","responsiveFontSizes","PrivateRoute","authed","rest","render","App","useState","getItem","setAuthed","customHistory","createBrowserHistory","interceptors","use","err","CssBaseline","history","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f46e5517.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\n\nclass EmailTextField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: true,\n      value: ''\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  handleOnChange(event) {\n    const email = event.target.value;\n    const regex = new RegExp(this.props.regex);\n    const isValid = !!email.match(regex);\n    if (this.props.onChange) {\n      this.props.onChange(email, isValid);\n    }\n    this.setState({ value: email, isValid, });\n  }\n\n  render() {\n    return (\n      <TextField\n        required\n        error={!this.state.isValid && this.props.showError}\n        label={this.props.label}\n        placeholder={this.props.placeholder}\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={this.handleOnChange}\n        fullWidth />\n    );\n  }\n}\n\nEmailTextField.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  regex: PropTypes.string,\n  showError: PropTypes.bool,\n};\n\nEmailTextField.defaultProps = {\n  label: 'Email',\n  placeholder: undefined,\n  showError: false,\n  regex: '^(([^<>()\\\\[\\\\]\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$',\n};\n\nexport default EmailTextField;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nclass PasswordTextField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: true,\n      value: '',\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  handleOnChange(event) {\n    const password = event.target.value;\n    const regex = new RegExp(this.props.regex);\n    let isValid;\n    if (this.props.match) {\n      isValid = password === this.props.match;\n    } else {\n      isValid = !!password.match(regex);\n    }\n    this.setState({ value: password, isValid, });\n    if (this.props.onChange) {\n      this.props.onChange(password, isValid);\n    }\n  }\n\n  render() {\n    return (\n      <TextField\n        required\n        error={!this.state.isValid && this.props.showError}\n        label={this.props.label}\n        placeholder={this.props.placeholder}\n        margin=\"normal\"\n        variant=\"outlined\"\n        type=\"password\"\n        onChange={this.handleOnChange}\n        fullWidth />\n    );\n  }\n}\n\nPasswordTextField.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  regex: PropTypes.string,\n  showError: PropTypes.bool,\n  match: PropTypes.string,\n};\n\nPasswordTextField.defaultProps = {\n  label: 'Password',\n  placeholder: undefined,\n  regex: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\\\$%\\\\^&\\\\*])(?=.{8,})',\n  showError: false,\n};\n\nexport default PasswordTextField;","import React, { Component } from 'react';\nimport { Paper, Button, Checkbox, FormControlLabel, Typography, Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\nimport EmailTextField from '../EmailTextField/EmailTextField';\nimport PasswordTextField from '../PasswordTextField/PasswordTextField';\nimport '../SignInUp.scss';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailValue: '',\n      emailValid: false,\n      passwordValue: '',\n      checkedRememberMe: false,\n    };\n    this.handleEmailField = this.handleEmailField.bind(this);\n    this.handlePasswordField = this.handlePasswordField.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleEmailField(value, isValid) {\n    this.setState({ emailValue: value, emailValid: isValid });\n  }\n\n  handlePasswordField(value) {\n    this.setState({ passwordValue: value });\n  }\n\n  async handleLogin() {\n    if (this.state.emailValid) {\n      const reqBody = {\n        email: this.state.emailValue,\n        password: this.state.passwordValue,\n      };\n      const response = await Axios.post('/api/user/login', reqBody);\n      console.log(response); // FIXME:: Remove this console log.\n      if (response.status === 200) { \n        localStorage.setItem('authed', 'true');\n      } else {\n        localStorage.setItem('authed', 'false');\n      }\n      if (this.props.onAuthChange) {\n        this.props.onAuthChange(response.status === 200);\n      }\n    }\n  }\n\n  render() {\n    const handleChange = name => event => {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    };\n    return (\n      <div className=\"auth-container\">\n        <Paper className=\"login-form\">\n          <h1>Login</h1>\n          <EmailTextField\n            showError\n            onChange={this.handleEmailField} />\n          <PasswordTextField \n            onChange={this.handlePasswordField} />\n          <Typography>\n            <Box textAlign=\"left\"\n              style={{}}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={this.state.checkedRememberMe}\n                    onChange={handleChange('checkedRememberMe')}\n                    color=\"primary\"\n                    value=\"checkedRememberMe\" />\n                }\n                label=\"Remember Me\"\n              />\n            </Box>\n          </Typography>\n          <Button className=\"login-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: '20px 0' }}\n            onClick={this.handleLogin}>\n            Login\n          </Button>\n          <Typography>\n            <Box textAlign=\"center\">\n              Don&apos;t have an account? \n              <Link to=\"/signup\" className=\"signup-link\">\n                Sign up here.\n              </Link>\n            </Box>\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  onAuthChange: PropTypes.func\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, Button, Typography, Box, TextField } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport EmailTextField from '../EmailTextField/EmailTextField';\nimport PasswordTextField from '../PasswordTextField/PasswordTextField';\nimport '../SignInUp.scss';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstNameValue: '',\n      firstNameValid: false,\n      lastNameValue: '',\n      lastNameValid: false,\n      emailValue: '',\n      emailValid: false,\n      passwordValue: '',\n      passwordValid: false,\n      passwordConfirmValue: '',\n      passwordConfirmValid: false,\n    };\n    this.handleFirstNameField = this.handleFirstNameField.bind(this);\n    this.handleLastNameField = this.handleLastNameField.bind(this);\n    this.handleEmailField = this.handleEmailField.bind(this);\n    this.handlePasswordField = this.handlePasswordField.bind(this);\n    this.handlePasswordConfirmField = this.handlePasswordConfirmField.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n\n  handleFirstNameField(event) {\n    const value = event.target.value;\n    this.setState({ firstNameValue: value, firstNameValid: value.length > 0 });\n  }\n\n  handleLastNameField(event) {\n    const value = event.target.value;\n    this.setState({ lastNameValue: value, lastNameValid: value.length > 0 });\n  }\n\n  handleEmailField(value, isValid) {\n    this.setState({ emailValue: value, emailValid: isValid });\n  }\n\n  handlePasswordField(value, isValid) {\n    this.setState({ passwordValue: value, passwordValid: isValid });\n  }\n\n  handlePasswordConfirmField(value, isValid) {\n    this.setState({ passwordConfirmValue: value, passwordConfirmValid: isValid });\n  }\n\n  async handleSignUp() {\n    if (!this.state.firstNameValid ||\n        !this.state.lastNameValid ||\n        !this.state.emailValid ||\n        !this.state.passwordValid ||\n        !this.state.passwordConfirmValid) {\n      return;\n    }\n    const reqBody = {\n      firstName: this.state.firstNameValue,\n      lastName: this.state.lastNameValue,\n      email: this.state.emailValue,\n      password: this.state.passwordValue,\n    };\n    const response = await Axios.post('/api/user/signup', reqBody);\n    console.log(response);\n    if (response.status === 200) { \n      localStorage.setItem('authed', 'true');\n    } else {\n      localStorage.setItem('authed', 'false');\n    }\n    if (this.props.onAuthChange) {\n      this.props.onAuthChange(response.status === 200);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <Paper className=\"login-form\">\n          <h1>Sign Up</h1>\n          <TextField required autoFocus\n            fullWidth\n            label=\"First Name\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleFirstNameField} />\n          <TextField required\n            fullWidth\n            label=\"Last Name\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleLastNameField} />\n          <EmailTextField \n            onChange={this.handleEmailField}\n            showError />\n          <PasswordTextField \n            onChange={this.handlePasswordField}\n            showError />\n          <PasswordTextField \n            label=\"Confirm Password\"\n            onChange={this.handlePasswordConfirmField}\n            match={this.state.passwordValue}\n            showError />\n          <Button className=\"login-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: '20px 0' }}\n            onClick={this.handleSignUp}>\n            Sign Up\n          </Button>\n          <Typography component=\"div\">\n            <Box textAlign=\"center\" component=\"p\">\n              Already have an account?\n              <Link to=\"/login\" className=\"signup-link\">\n                Go to login.\n              </Link>\n            </Box>\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  onAuthChange: PropTypes.func,\n};\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, List, Toolbar, Typography, IconButton, ListItem, ListItemIcon, ListItemText, SwipeableDrawer } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PeopleIcon from '@material-ui/icons/People';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport './Navbar.scss';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.handleToggleDrawer = this.handleToggleDrawer.bind(this);\n  }\n\n  handleToggleDrawer() {\n    if (this.state.open) {\n      this.setState({ open: false });\n    } else {\n      this.setState({ open: true });\n    }\n  }\n\n  render() {\n    const sideNav = (\n      <div className=\"sideNav\"\n        role=\"presentation\"\n        onClick={this.handleToggleDrawer}\n        onKeyDown={this.handleToggleDrawer}>\n        <Router></Router>\n        <List>\n          <Link to=\"/dashboard\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemIcon className=\"drawer-icon\">\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/jobapps\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemIcon className=\"drawer-icon\">\n                <AssignmentIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Job Applications\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/interviews\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemIcon className=\"drawer-icon\">\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Interviews\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/jobs\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemIcon className=\"drawer-icon\">\n                <WorkIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Job Listings\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/profile\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemIcon className=\"drawer-icon\">\n                <AccountCircleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"My Profile\" />\n            </ListItem>\n          </Link>\n        </List>\n      </div>\n    );\n    let title = '';\n    switch(this.props.location.pathname) {\n      case '/dashboard': {\n        title = 'Dashboard';\n        break;\n      }\n      case '/jobapps': {\n        title = 'Job Applications';\n        break;\n      }\n      case '/interviews': {\n        title = 'Interviews';\n        break;\n      }\n      case '/jobs': {\n        title = 'Job Listings';\n        break;\n      }\n      case '/profile': {\n        title = 'Profile';\n        break;\n      }\n      default: {\n        title = '';\n        break;\n      }\n    }\n    return (\n      <div>\n        <AppBar position=\"static\" className=\"app-bar\">\n          <Toolbar className=\"nav-toolbar\">\n            <IconButton edge=\"start\" className=\"menu-button\" onClick={this.handleToggleDrawer} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" >{title}</Typography>\n            <SwipeableDrawer open={this.state.open} onOpen={this.handleToggleDrawer} onClose={this.handleToggleDrawer} className={'side-drawer'}>\n              {sideNav}\n            </SwipeableDrawer>\n            <div className=\"right\">\n              <IconButton color=\"inherit\" aria-label=\"add\">\n                <AddIcon />\n              </IconButton>\n              <IconButton color=\"inherit\" aria-label=\"Notifications\">\n                <NotificationsIcon />\n              </IconButton>\n              <IconButton color=\"inherit\" aria-label=\"profile\">\n                <AccountCircleIcon />\n              </IconButton>\n              <IconButton color=\"inherit\" aria-label=\"settings\">\n                <SettingsIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(Navbar);","import React, { Component } from 'react';\nimport { Grid, Checkbox, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nclass JobApplicationListItem extends Component {\n  render() {\n    return (\n      <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Grid item xs={1}>\n          <Checkbox style={{padding: '4px'}} inputProps={{'aria-label': 'checkbox'}} />\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" noWrap>{this.props.title}</Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"body1\" noWrap>{this.props.company}</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"body1\" noWrap>{this.props.status}</Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nJobApplicationListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  company: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nJobApplicationListItem.defaultProps = {\n};\n\nexport default JobApplicationListItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Divider } from '@material-ui/core';\nimport JobApplicationListItem from '../JobApplicationListItem/JobApplicationListItem';\n\nclass JobApplicationList extends Component {\n  render() {\n    const jobListItems = this.props.jobs.map((job, index) => (\n      <div key={index}>\n        <ListItem>\n          <JobApplicationListItem title={job.title} company={job.company} status={job.status} />\n        </ListItem>\n        {this.props.divided ? index + 1 < this.props.jobs.length ? <Divider /> : null : null}\n      </div>\n    ));\n    return (\n      <List style={{ height: '100%' }}>\n        {jobListItems}\n      </List>\n    );\n  }\n}\n\nJobApplicationList.propTypes = {\n  jobs: PropTypes.array,\n  widget: PropTypes.bool,\n  divided: PropTypes.bool,\n};\n\nJobApplicationList.defaultProps = {\n  jobs: [],\n  widget: false,\n  divided: false,\n};\n\nexport default JobApplicationList;","import React, { Component } from 'react';\nimport { Checkbox, Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nclass InterviewListItem extends Component {\n  render() {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    const date = this.props.date instanceof Date ? \n      this.props.date.toLocaleDateString('en-EN', options) :\n      new Date(this.props.date).toLocaleDateString('en-EN', options);\n    return (\n      <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Grid item xs={1}>\n          <Checkbox style={{padding: '4px'}} inputProps={{'aria-label': 'checkbox'}} />\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"body1\" noWrap>{this.props.company}</Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <Typography variant=\"body1\" noWrap>{this.props.title}</Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"body1\" noWrap>{date}</Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nInterviewListItem.propTypes = {\n  title: PropTypes.string,\n  company: PropTypes.string.isRequired,\n  date: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nInterviewListItem.defaultProps = {\n  title: '',\n  date: 'No Date'\n};\n\nexport default InterviewListItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, List, ListItem } from '@material-ui/core';\nimport InterviewListItem from '../InterviewListItem/InterviewListItem';\n\nclass InterviewList extends Component {\n  render() {\n    const interviewListItems = this.props.interviews.map((interview, index) => (\n      <div key={index}>\n        <ListItem>\n          <InterviewListItem title={interview.title} company={interview.company} date={interview.date} />\n        </ListItem>\n        {this.props.divided ? index + 1 < this.props.interviews.length ? <Divider /> : null : null}\n      </div>\n    ));\n    return (\n      <List>\n        {interviewListItems}\n      </List>\n    );\n  }\n}\n\nInterviewList.propTypes = {\n  interviews: PropTypes.array,\n  widget: PropTypes.bool,\n  divided: PropTypes.bool,\n};\n\nInterviewList.defaultProps = {\n  interviews: [],\n  widget: false,\n  divided: false,\n};\n\nexport default InterviewList;\n","import React, { Component } from 'react';\nimport { Paper, Grid } from '@material-ui/core';\nimport JobApplicationList from '../JobApplicationList/JobApplicationList';\nimport InterviewList from '../InterviewList/InterviewList';\nimport './Dashboard.scss';\nimport Axios from 'axios';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applications: [],\n      interviews: [],\n    };\n    this.reloadDashboardData = this.reloadDashboardData.bind(this);\n    this.reloadDashboardData();\n  }\n\n  componentnWillMount() {\n    this.reloadDashboardData();\n  }\n\n  async reloadDashboardData() {\n    const applicationRes = await Axios.get('/api/application/all');\n    const interviewRes = await Axios.get('/api/interview/all');\n    if (!interviewRes && !applicationRes) {\n      localStorage.setItem('authed', false);\n      return;\n    }\n    if (applicationRes && applicationRes.status === 200) {\n      this.setState({\n        applications: applicationRes.data.jobApplications,\n      });\n    }\n    if(interviewRes && interviewRes.status === 200) {\n      this.setState({\n        interviews: interviewRes.data.jobInterviews,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <Grid container direction=\"column\" spacing={2} style={{ height: '100%', width: '100%', margin: '0' }}>\n          <Grid item xs style={{height: '60%', }}>\n            <h1>Recent Job Applications</h1>\n            <Paper style={{height: '75%', overflow: 'auto'}}>\n              <JobApplicationList jobs={this.state.applications} divided />\n            </Paper>\n          </Grid>\n          <Grid item xs style={{height: '60%', }}>\n            <h1>Upcoming Interviews</h1>\n            <Paper style={{height: '75%', overflow: 'auto'}}>\n              <InterviewList interviews={this.state.interviews} divided />\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction CustomSnackbar(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nCustomSnackbar.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nexport default CustomSnackbar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Snackbar } from '@material-ui/core';\nimport { Fab, TextField, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport AddIcon from '@material-ui/icons/Add';\nimport CustomSnackbar from '../CustomSnackbar/CustomSnackbar';\nimport Axios from 'axios';\n\nclass NewApplicationDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      successSnackbarOpen: false,\n      failSnackbarOpen: false,\n      company: '',\n      title: '',\n      status: '',\n      priority: 1,\n      appliedDate: new Date(),\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClearFields = this.handleClearFields.bind(this);\n    this.handleOnAdd = this.handleOnAdd.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({ open: true, });\n  }\n\n  handleClose() {\n    this.setState({ open: false, });\n  }\n\n  handleClearFields() {\n    this.setState({ company: '', title: '', status: '', appliedDate: new Date() });\n  }\n\n  async handleOnAdd() {\n    const { title, company, status, appliedDate, priority } = this.state;\n    if (!title || !company || !status || !appliedDate || !priority) {\n      this.setState({ failSnackbarOpen: true });\n    } else {\n      const data = {\n        title,\n        company,\n        status,\n        appliedDate,\n        priority,\n      };\n      const res = await Axios.post('/api/application/new', data);\n      if (res.status === 200) {\n        if (this.props.onAdd) {\n          this.props.onAdd();\n        }\n        this.handleClose();\n        this.handleClearFields();\n        this.setState({ successSnackbarOpen: true });\n      } else {\n        this.setState({ failSnackbarOpen: true });\n      }\n    }\n  }\n\n  render() {\n    const fabStyle = {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'absolute',\n    };\n    return (\n      <div>\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle>New Job Application</DialogTitle>\n          <DialogContent>\n            <TextField autoFocus\n              margin=\"dense\"\n              value={this.state.company}\n              label=\"Company\"\n              type=\"name\"\n              onChange={(event) => this.setState({ company: event.target.value })}\n              fullWidth />\n            <TextField margin=\"dense\"\n              value={this.state.title}\n              label=\"Job Title\"\n              type=\"name\"\n              onChange={(event) => this.setState({ title: event.target.value })}\n              fullWidth />\n            <TextField margin=\"dense\"\n              value={this.state.status}\n              label=\"Status\"\n              type=\"name\"\n              onChange={(event) => this.setState({ status: event.target.value })}\n              fullWidth />\n            <FormControl margin=\"dense\" fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">Priority</InputLabel>\n              <Select value={this.state.priority}\n                onChange={(event) => this.setState({ priority: event.target.value })} >\n                <MenuItem value={0}>Low</MenuItem>\n                <MenuItem value={1}>Medium</MenuItem>\n                <MenuItem value={2}>High</MenuItem>\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin=\"dense\"\n                variant=\"inline\"\n                label=\"Applied Date\"\n                format=\"MM/dd/yyyy\"\n                value={this.state.appliedDate}\n                onChange={(date) => this.setState({ appliedDate: date })}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n                fullWidth />\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => { this.handleClearFields(); this.handleClose(); }} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClearFields} color=\"primary\">\n              Clear All\n            </Button>\n            <Button onClick={this.handleOnAdd} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Fab color=\"primary\" aria-label=\"add\" style={fabStyle} onClick={this.handleOpen}>\n          <AddIcon />\n        </Fab>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.successSnackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => this.setState({ successSnackbarOpen: false })} >\n          <CustomSnackbar\n            onClose={() => this.setState({ successSnackbarOpen: false })}\n            variant=\"success\"\n            message=\"Your new job application has been added!\" />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.failSnackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => this.setState({ failSnackbarOpen: false })} >\n          <CustomSnackbar\n            onClose={() => this.setState({ failSnackbarOpen: false })}\n            variant=\"error\"\n            message=\"Unable to add new job application, please try again.\" />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nNewApplicationDialog.propTypes = {\n  onAdd: PropTypes.func,\n};\n\nexport default NewApplicationDialog;\n","import React, { Component } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport Axios from 'axios';\nimport JobApplicationList from '../JobApplicationList/JobApplicationList';\nimport NewApplicationDialog from '../NewApplicationDialog/NewApplicationDialog';\n\nclass JobApplicationsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applications: [],\n      dialogOpen: false,\n    };\n    this.loadJobApplications = this.loadJobApplications.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadJobApplications();\n  }\n\n  async loadJobApplications() {\n    const res = await Axios.get('/api/application/all');\n    if (!res) {\n      localStorage.setItem('authed', false);\n      return;\n    } else if (res && res.status === 200) {\n      this.setState({\n        applications: res.data.jobApplications,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <Grid container direction=\"column\" spacing={2} style={{ height: '100%', width: '100%', margin: '0' }}>\n          <Grid item xs>\n            <Paper style={{ height: '100%', overflow: 'auto' }}>\n              <JobApplicationList jobs={this.state.applications} divided />\n            </Paper>\n            <NewApplicationDialog open={this.state.dialogOpen} onAdd={this.loadJobApplications} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default JobApplicationsView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Snackbar } from '@material-ui/core';\nimport { Fab, TextField, Button } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport AddIcon from '@material-ui/icons/Add';\nimport CustomSnackbar from '../CustomSnackbar/CustomSnackbar';\nimport Axios from 'axios';\n\nclass NewInterviewDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      successSnackbarOpen: false,\n      failSnackbarOpen: false,\n      company: '',\n      title: '',\n      status: '',\n      type: '',\n      interviewDate: new Date(),\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleClearFields = this.handleClearFields.bind(this);\n    this.handleOnAdd = this.handleOnAdd.bind(this);\n  }\n\n  handleOpen() {\n    this.setState({ open: true, });\n  }\n\n  handleClose() {\n    this.setState({ open: false, });\n  }\n\n  handleClearFields() {\n    this.setState({ company: '', title: '', status: '', interviewDate: new Date() });\n  }\n\n  async handleOnAdd() {\n    const { title, company, status, interviewDate, type } = this.state;\n    if (!title || !company || !status || !interviewDate || !type) {\n      this.setState({ failSnackbarOpen: true });\n    } else {\n      const data = {\n        title,\n        company,\n        status,\n        date: interviewDate,\n        type,\n      };\n      const res = await Axios.post('/api/interview/new', data);\n      if (res.status === 200) {\n        if (this.props.onAdd) {\n          this.props.onAdd();\n        }\n        this.handleClose();\n        this.handleClearFields();\n        this.setState({ successSnackbarOpen: true });\n      } else {\n        this.setState({ failSnackbarOpen: true });\n      }\n    }\n  }\n\n  render() {\n    const fabStyle = {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'absolute',\n    };\n    return (\n      <div>\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle>New Job Interview</DialogTitle>\n          <DialogContent>\n            <TextField autoFocus\n              margin=\"dense\"\n              value={this.state.company}\n              label=\"Company\"\n              type=\"name\"\n              onChange={(event) => this.setState({ company: event.target.value })}\n              fullWidth />\n            <TextField margin=\"dense\"\n              value={this.state.title}\n              label=\"Job Title\"\n              type=\"name\"\n              onChange={(event) => this.setState({ title: event.target.value })}\n              fullWidth />\n            <TextField margin=\"dense\"\n              value={this.state.status}\n              label=\"Status\"\n              type=\"name\"\n              onChange={(event) => this.setState({ status: event.target.value })}\n              fullWidth />\n            <TextField margin=\"dense\"\n              value={this.state.type}\n              label=\"Interview Type\"\n              type=\"name\"\n              onChange={(event) => this.setState({ type: event.target.value })}\n              fullWidth />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin=\"dense\"\n                variant=\"inline\"\n                label=\"Date\"\n                format=\"MM/dd/yyyy\"\n                value={this.state.interviewDate}\n                onChange={(date) => this.setState({ interviewDate: date })}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n                fullWidth />\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => { this.handleClearFields(); this.handleClose(); }} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClearFields} color=\"primary\">\n              Clear All\n            </Button>\n            <Button onClick={this.handleOnAdd} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Fab color=\"primary\" aria-label=\"add\" style={fabStyle} onClick={this.handleOpen}>\n          <AddIcon />\n        </Fab>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.successSnackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => this.setState({ successSnackbarOpen: false })} >\n          <CustomSnackbar\n            onClose={() => this.setState({ successSnackbarOpen: false })}\n            variant=\"success\"\n            message=\"Your interview has been added!\" />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.failSnackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => this.setState({ failSnackbarOpen: false })} >\n          <CustomSnackbar\n            onClose={() => this.setState({ failSnackbarOpen: false })}\n            variant=\"error\"\n            message=\"Unable to add new interview, please try again.\" />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nNewInterviewDialog.propTypes = {\n  onAdd: PropTypes.func,\n};\n\nexport default NewInterviewDialog;\n","import React, { Component } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport Axios from 'axios';\nimport InterviewList from '../InterviewList/InterviewList';\nimport NewInterviewDialog from '../NewInterviewDialog/NewInterviewDialog';\n\nclass JobInterviewsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      interviews: [],\n      dialogOpen: false,\n    };\n    this.loadInterviews = this.loadInterviews.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadInterviews();\n  }\n\n  async loadInterviews() {\n    const res = await Axios.get('/api/interview/all');\n    if (!res) {\n      localStorage.setItem('authed', false);\n      return;\n    } else if (res && res.status === 200) {\n      this.setState({\n        interviews: res.data.jobInterviews,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <Grid container direction=\"column\" spacing={2} style={{ height: '100%', width: '100%', margin: '0' }}>\n          <Grid item xs>\n            <Paper style={{ height: '100%', overflow: 'auto' }}>\n              <InterviewList interviews={this.state.interviews} divided />\n            </Paper>\n            <NewInterviewDialog open={this.state.dialogOpen} onAdd={this.loadInterviews} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default JobInterviewsView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n  render() {\n    return (\n      <h1>{this.props.statusCode}</h1>\n    );\n  }\n}\n\nErrorPage.propTypes = {\n  statusCode: PropTypes.number,\n};\n\nErrorPage.defaultProps = {\n  statusCode: 404,\n};\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from '../Navbar/Navbar';\nimport Dashboard from '../Dashboard/Dashboard';\nimport JobApplicationsView from '../JobApplicationsView/JobApplicationsView';\nimport JobInterviewsView from '../JobInterviewsView/JobInterviewsView';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport './AuthedApp.scss';\n\nclass AuthedApp extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <Router>\n          <Navbar />\n          <div className=\"app-content\">\n            <Switch>\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/jobapps\" component={JobApplicationsView} />\n              <Route exact path=\"/interviews\" component={JobInterviewsView} />\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route component={ErrorPage} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default AuthedApp;\n","import React, { useState } from 'react';\nimport { MuiThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Login from '../SignInUp/Login/Login';\nimport SignUp from '../SignInUp/SignUp/SignUp';\nimport AuthedApp from '../AuthedApp/AuthedApp';\nimport './App.scss';\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    authed === true\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.object,\n  authed: PropTypes.bool,\n};\n\nfunction App() {\n  const [ authed, setAuthed ] = useState(localStorage.getItem('authed')==='true');\n  const customHistory = createBrowserHistory();\n\n  Axios.interceptors.response.use((res) => {\n    return res;\n  }, (err) => {\n    if (err.response.status === 401) {\n      localStorage.setItem('authed', false);\n      setAuthed(false);\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router history={customHistory}>\n        <Switch>\n          <PrivateRoute path=\"/dashboard\" authed={authed} component={AuthedApp} />\n          {authed ? <Redirect to=\"/dashboard\" /> : undefined}\n          <Route exact path=\"/login\">\n            <Login onAuthChange={setAuthed} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp onAuthChange={setAuthed} />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to={authed ? '/dashboard' : '/login'} />\n          </Route>\n        </Switch>\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}